apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/proxy-next-upstream: error
    nginx.ingress.kubernetes.io/proxy-next-upstream-tries: "3"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "5s"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "10s"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "10s"
    nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "1024m"
    nginx.ingress.kubernetes.io/proxy-pass-request-headers: "Authorization"
    nginx.ingress.kubernetes.io/retry-requests: "3"
    nginx.ingress.kubernetes.io/retry-on: "503"
    nginx.ingress.kubernetes.io/timeout: "60s"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri = /groom) {
        return 301 /groom/?arg=https%3A%2F%2Fpoker.local;
      }
    nginx.ingress.kubernetes.io/error-pages: |
      404 /groom/?arg=https://{{ .Values.externalDomain }}
  name: room-ingress
  namespace: poker
spec:
  ingressClassName: nginx
  rules:
  - host: {{ .Values.externalDomain }}
    http:
      paths:
{{- range $index, $room := .Values.rooms }}
      - backend:
          service:
            name: room-{{ $room.name | lower }}
            port:
              number: {{ $.Values.tty2webPort | add $room.index }}
        path: /room-{{ $room.name | lower }}(/|$)(.*)
        pathType: Prefix
{{- end }}    
      - backend:
          service:
            name: groom
            port:
              number: {{ .Values.groomPort }}
        path: /groom(/|$)(.*)
        pathType: Prefix